version: "3.9"

services:
  db:
    image: postgres:14
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  backend:
    build:
      context: .
      dockerfile: Dockerfile_backend
    command: sh -c "python manage.py migrate --noinput && python manage.py collectstatic --no-input --clear && gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    volumes:
      - .env:/app/.env
      - static_volume:/app/staticfiles

  frontend:
    build:
      context: ../getsentiApp
    image: frontend:builder
    ports:
      - "3000:3000"

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile_backend
    command: celery -A config worker --loglevel=info
    depends_on:
      - db
      - redis
    volumes:
      - .env:/app/.env

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile_backend
    command: celery -A config beat --loglevel=info
    depends_on:
      - db
      - redis
    volumes:
      - .env:/app/.env

  nginx:
    build:
      context: .
      dockerfile: Dockerfile_nginx
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    volumes:
      - static_volume:/app/staticfiles

  redis:
    image: redis:latest

volumes:
  postgres-data:
  static_volume: